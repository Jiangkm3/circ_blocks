Options { path: "../zok_tests/Benchmarks/2pc_demo.zok", skip_linred: false, circ: CircOpt { r1cs: R1csOpt { verified: false, profile: false, div_by_zero: Incomplete, lc_elim_thresh: 50 }, field: FieldOpt { builtin: Bls12381, custom_modulus: "" }, ir: IrOpt { field_to_bv: Wrap }, ram: RamOpt { enabled: false, range: Sort, index: Uniqueness }, fmt: FmtOpt { use_default_field: true, hide_field: false }, zsharp: ZsharpOpt { isolate_asserts: false }, datalog: DatalogOpt { rec_limit: 5, lint_prim_rec: false }, c: COpt { sv_functions: false, assert_no_ub: false } }, action: Count, quiet: false }
Entry block: 0

Block 0:
Inputs:
Outputs:
Instructions:
    field %RP = 0 <Field>
    field %SP = 0 <Field>
    field %BP = 0 <Field>
Transition: -> 1

Block 1:
Inputs:
Outputs:
Instructions:
    field b@0 = 6 <Field>
    assert a@0 == 5 <Field>
    field i@0 = 0 <Field>
Transition: 
    i@0 < 2 <Field> ? -> 2 : -> 4

Block 2:
Inputs:
Outputs:
Instructions:
    %PHY[%SP + 0] = %BP <field>
    field %BP = %SP
    %PHY[%SP + 1] = a@0 <field>
    field a@1 = 20 <Field>
    field %SP = %SP + 2 <Field>
    field %ARG0 = a@1
    field %ARG1 = b@0
    %PHY[%SP + 0] = %BP <field>
    field %BP = %SP
    %PHY[%SP + 1] = a@1 <field>
    %PHY[%SP + 2] = b@0 <field>
    %PHY[%SP + 3] = i@0 <field>
    field %SP = %SP + 4 <Field>
    field b@0 = %ARG0
    field c@0 = %ARG1
    field %RP = 3 <Field>
Transition: -> 6

Block 3:
Inputs:
Outputs:
Instructions:
    field %RET0 = %RET
    field i@0 = %PHY[%BP + 3]
    field b@0 = %PHY[%BP + 2]
    field a@1 = %PHY[%BP + 1]
    field %BP = %PHY[%BP + 0]
    field b@0 = %RET0
    %PHY[%SP + 0] = %BP <field>
    field %BP = %SP
    %PHY[%SP + 1] = b@0 <field>
    field b@1 = 10 <Field>
    field %SP = %SP + 2 <Field>
    field b@0 = %PHY[%BP + 1]
    field %BP = %PHY[%BP + 0]
    field a@0 = %PHY[%BP + 1]
    field %BP = %PHY[%BP + 0]
    field i@0 = i@0 + 1 <Field>
Transition: 
    i@0 < 2 <Field> ? -> 2 : -> 4

Block 4:
Inputs:
Outputs:
Instructions:
    field %RET = a@0 + b@0
Program terminates.

Block 5:
Inputs:
Outputs:
Instructions:
Program terminates.

Block 6:
Inputs:
Outputs:
Instructions:
    field a@0 = c@0
    field %RET = b@0 + a@0
Transition: -> %RP

Block 7:
Inputs:
Outputs:
Instructions:
Transition: -> %RP


--
Optimization:
Entry block: 0

Block 0:
Inputs:
    %4: field, Public
Outputs:
    %BP: field, 
    %SP: field, 
    %4: field, 
Instructions:
    field %RP = 0 <Field>
    field %SP = 0 <Field>
    field %BP = 0 <Field>
Transition: -> 1

Block 1:
Inputs:
    %BP: field, Prover
    %SP: field, Prover
    %4: field, Prover
Outputs:
    %BP: field, 
    %5: field, 
    %SP: field, 
    %4: field, 
    %6: field, 
Instructions:
    field %5 = 6 <Field>
    assert %4 == 5 <Field>
    field %6 = 0 <Field>
Transition: 
    %6 < 2 <Field> ? -> 2 : -> 4

Block 2:
Inputs:
    %4: field, Prover
    %5: field, Prover
    %SP: field, Prover
    %BP: field, Prover
    %6: field, Prover
Outputs:
    %5: field, 
    %SP: field, 
    %BP: field, 
    %7: field, 
    %RP: field, 
Instructions:
    %PHY[%SP + 0] = %BP <field>
    field %BP = %SP
    %PHY[%SP + 1] = %4 <field>
    field %4 = 20 <Field>
    field %SP = %SP + 2 <Field>
    field %ARG0 = %4
    field %ARG1 = %5
    %PHY[%SP + 0] = %BP <field>
    field %BP = %SP
    %PHY[%SP + 1] = %5 <field>
    %PHY[%SP + 2] = %6 <field>
    field %SP = %SP + 3 <Field>
    field %5 = %ARG0
    field %7 = %ARG1
    field %RP = 3 <Field>
Transition: -> 5

Block 3:
Inputs:
    %BP: field, Prover
    %RET: field, Prover
    %SP: field, Prover
Outputs:
    %5: field, 
    %BP: field, 
    %6: field, 
    %SP: field, 
    %4: field, 
Instructions:
    field %8 = %RET
    field %6 = %PHY[%BP + 2]
    field %5 = %PHY[%BP + 1]
    field %BP = %PHY[%BP + 0]
    field %5 = %8
    %PHY[%SP + 0] = %BP <field>
    field %BP = %SP
    %PHY[%SP + 1] = %5 <field>
    field %SP = %SP + 2 <Field>
    field %5 = %PHY[%BP + 1]
    field %BP = %PHY[%BP + 0]
    field %4 = %PHY[%BP + 1]
    field %BP = %PHY[%BP + 0]
    field %6 = %6 + 1 <Field>
Transition: 
    %6 < 2 <Field> ? -> 2 : -> 4

Block 4:
Inputs:
    %4: field, Prover
    %5: field, Prover
Outputs:
Instructions:
    field %RET = %4 + %5
Program terminates.

Block 5:
Inputs:
    %BP: field, Prover
    %SP: field, Prover
    %5: field, Prover
    %7: field, Prover
    %RP: field, Prover
Outputs:
    %BP: field, 
    %SP: field, 
    %RET: field, 
    %RP: field, 
Instructions:
    field %4 = %7
    field %RET = %5 + %4
Transition: -> %RP


--
Circ IR:
Optimizing IR... done.

--
Name: Block_3
VariableMetadata:
Block_3_f3_lex0_%4_out_v0: vis: PROVER, round: 0, random: false, committed: false
Block_3_f3_lex0_%5_out_v0: vis: PROVER, round: 0, random: false, committed: false
Block_3_f3_lex0_%6_out_v0: vis: PROVER, round: 0, random: false, committed: false
Block_3_f3_lex0_%BP_out_v0: vis: PROVER, round: 0, random: false, committed: false
Block_3_f3_lex0_%BP_v0: vis: PROVER, round: 0, random: false, committed: false
Block_3_f3_lex0_%C0_v0: vis: PUBLIC, round: 0, random: false, committed: false
Block_3_f3_lex0_%C1_v0: vis: PUBLIC, round: 0, random: false, committed: false
Block_3_f3_lex0_%FGP_out_v0: vis: PROVER, round: 0, random: false, committed: false
Block_3_f3_lex0_%FGP_v0: vis: PROVER, round: 0, random: false, committed: false
Block_3_f3_lex0_%RET_v0: vis: PROVER, round: 0, random: false, committed: false
Block_3_f3_lex0_%SP_out_v0: vis: PROVER, round: 0, random: false, committed: false
Block_3_f3_lex0_%SP_v0: vis: PROVER, round: 0, random: false, committed: false
Block_3_f3_lex0_PHY_MEM_ADDR_0_v0: vis: PROVER, round: 0, random: false, committed: false
Block_3_f3_lex0_PHY_MEM_ADDR_1_v0: vis: PROVER, round: 0, random: false, committed: false
Block_3_f3_lex0_PHY_MEM_ADDR_2_v0: vis: PROVER, round: 0, random: false, committed: false
Block_3_f3_lex0_PHY_MEM_ADDR_3_v0: vis: PROVER, round: 0, random: false, committed: false
Block_3_f3_lex0_PHY_MEM_ADDR_4_v0: vis: PROVER, round: 0, random: false, committed: false
Block_3_f3_lex0_PHY_MEM_ADDR_5_v0: vis: PROVER, round: 0, random: false, committed: false
Block_3_f3_lex0_PHY_MEM_ADDR_6_v0: vis: PROVER, round: 0, random: false, committed: false
Block_3_f3_lex0_PHY_MEM_ADDR_7_v0: vis: PROVER, round: 0, random: false, committed: false
Block_3_f3_lex0_PHY_MEM_ADDR_8_v0: vis: PROVER, round: 0, random: false, committed: false
Block_3_f3_lex0_PHY_MEM_VAL_0_v0: vis: PROVER, round: 0, random: false, committed: false
Block_3_f3_lex0_PHY_MEM_VAL_1_v0: vis: PROVER, round: 0, random: false, committed: false
Block_3_f3_lex0_PHY_MEM_VAL_2_v0: vis: PROVER, round: 0, random: false, committed: false
Block_3_f3_lex0_PHY_MEM_VAL_3_v0: vis: PROVER, round: 0, random: false, committed: false
Block_3_f3_lex0_PHY_MEM_VAL_4_v0: vis: PROVER, round: 0, random: false, committed: false
Block_3_f3_lex0_PHY_MEM_VAL_5_v0: vis: PROVER, round: 0, random: false, committed: false
Block_3_f3_lex0_PHY_MEM_VAL_6_v0: vis: PROVER, round: 0, random: false, committed: false
Block_3_f3_lex0_PHY_MEM_VAL_7_v0: vis: PROVER, round: 0, random: false, committed: false
Block_3_f3_lex0_PHY_MEM_VAL_8_v0: vis: PROVER, round: 0, random: false, committed: false
return: vis: PUBLIC, round: 0, random: false, committed: false
Output:
  (declare
 (
 )
((challenge Block_3_f3_lex0_%C0_v0 52435875175126190479447740508185965837690552500527637822603658699938581184513)))

  (declare
 (
 )
((challenge Block_3_f3_lex0_%C1_v0 52435875175126190479447740508185965837690552500527637822603658699938581184513)))

  (set_default_modulus 52435875175126190479447740508185965837690552500527637822603658699938581184513
(declare
 (
  (Block_3_f3_lex0_PHY_MEM_VAL_8_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_3_f3_lex0_%BP_out_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_3_f3_lex0_PHY_MEM_ADDR_3_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_3_f3_lex0_%SP_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_3_f3_lex0_PHY_MEM_VAL_0_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_3_f3_lex0_%6_out_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_3_f3_lex0_PHY_MEM_ADDR_1_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_3_f3_lex0_%BP_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_3_f3_lex0_PHY_MEM_VAL_3_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_3_f3_lex0_PHY_MEM_VAL_2_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_3_f3_lex0_PHY_MEM_VAL_4_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_3_f3_lex0_%RET_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_3_f3_lex0_PHY_MEM_ADDR_8_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_3_f3_lex0_%SP_out_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_3_f3_lex0_PHY_MEM_ADDR_2_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_3_f3_lex0_PHY_MEM_ADDR_4_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_3_f3_lex0_PHY_MEM_VAL_7_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_3_f3_lex0_%4_out_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_3_f3_lex0_%FGP_out_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_3_f3_lex0_%C1_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_3_f3_lex0_%C0_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_3_f3_lex0_PHY_MEM_ADDR_7_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_3_f3_lex0_PHY_MEM_ADDR_6_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_3_f3_lex0_PHY_MEM_VAL_6_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_3_f3_lex0_PHY_MEM_ADDR_5_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_3_f3_lex0_PHY_MEM_VAL_5_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_3_f3_lex0_PHY_MEM_VAL_1_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_3_f3_lex0_PHY_MEM_ADDR_0_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_3_f3_lex0_%FGP_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (return (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_3_f3_lex0_%5_out_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
 )
 (let
  (
   ('0 (+ Block_3_f3_lex0_PHY_MEM_VAL_0_v0 #f1))
   ('1 (+ Block_3_f3_lex0_%SP_v0 #f1))
  )
  
(and (= '1 Block_3_f3_lex0_PHY_MEM_ADDR_5_v0) (= (+ Block_3_f3_lex0_%BP_v0 #f2) Block_3_f3_lex0_PHY_MEM_ADDR_0_v0) (= Block_3_f3_lex0_%5_out_v0 Block_3_f3_lex0_PHY_MEM_VAL_5_v0) (= Block_3_f3_lex0_PHY_MEM_VAL_6_v0 Block_3_f3_lex0_PHY_MEM_ADDR_6_v0) (= (ite (bvult ((pf2bv 255) '0) #b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010) #f2 #f4) return) (= (+ Block_3_f3_lex0_PHY_MEM_VAL_6_v0 #f1) Block_3_f3_lex0_PHY_MEM_ADDR_7_v0) (= (* (* (* (* (* (* (* (* (* Block_3_f3_lex0_%FGP_v0 (+ (- (+ (- (* Block_3_f3_lex0_%C0_v0 Block_3_f3_lex0_PHY_MEM_VAL_0_v0)) Block_3_f3_lex0_PHY_MEM_ADDR_0_v0)) Block_3_f3_lex0_%C1_v0)) (+ (- (+ (- (* Block_3_f3_lex0_%C0_v0 Block_3_f3_lex0_PHY_MEM_VAL_1_v0)) Block_3_f3_lex0_PHY_MEM_ADDR_1_v0)) Block_3_f3_lex0_%C1_v0)) (+ (- (+ (- (* Block_3_f3_lex0_%C0_v0 Block_3_f3_lex0_PHY_MEM_VAL_2_v0)) Block_3_f3_lex0_PHY_MEM_ADDR_2_v0)) Block_3_f3_lex0_%C1_v0)) (+ (- (+ (- (* Block_3_f3_lex0_%C0_v0 Block_3_f3_lex0_PHY_MEM_VAL_3_v0)) Block_3_f3_lex0_PHY_MEM_ADDR_3_v0)) Block_3_f3_lex0_%C1_v0)) (+ (- (+ (- (* Block_3_f3_lex0_%C0_v0 Block_3_f3_lex0_PHY_MEM_VAL_4_v0)) Block_3_f3_lex0_PHY_MEM_ADDR_4_v0)) Block_3_f3_lex0_%C1_v0)) (+ (- (+ (- (* Block_3_f3_lex0_%C0_v0 Block_3_f3_lex0_PHY_MEM_VAL_5_v0)) Block_3_f3_lex0_PHY_MEM_ADDR_5_v0)) Block_3_f3_lex0_%C1_v0)) (+ (- (+ (- (* Block_3_f3_lex0_%C0_v0 Block_3_f3_lex0_PHY_MEM_VAL_6_v0)) Block_3_f3_lex0_PHY_MEM_ADDR_6_v0)) Block_3_f3_lex0_%C1_v0)) (+ (- (+ (- (* Block_3_f3_lex0_%C0_v0 Block_3_f3_lex0_PHY_MEM_VAL_7_v0)) Block_3_f3_lex0_PHY_MEM_ADDR_7_v0)) Block_3_f3_lex0_%C1_v0)) (+ (- (+ (- (* Block_3_f3_lex0_%C0_v0 Block_3_f3_lex0_PHY_MEM_VAL_8_v0)) Block_3_f3_lex0_PHY_MEM_ADDR_8_v0)) Block_3_f3_lex0_%C1_v0)) Block_3_f3_lex0_%FGP_out_v0) (= Block_3_f3_lex0_%4_out_v0 Block_3_f3_lex0_PHY_MEM_VAL_7_v0) (= '1 Block_3_f3_lex0_PHY_MEM_ADDR_4_v0) (= Block_3_f3_lex0_PHY_MEM_VAL_2_v0 Block_3_f3_lex0_PHY_MEM_ADDR_2_v0) (= Block_3_f3_lex0_%SP_out_v0 (+ Block_3_f3_lex0_%SP_v0 #f2)) (= Block_3_f3_lex0_PHY_MEM_VAL_8_v0 Block_3_f3_lex0_PHY_MEM_ADDR_8_v0) (= Block_3_f3_lex0_%RET_v0 Block_3_f3_lex0_PHY_MEM_VAL_4_v0) (= Block_3_f3_lex0_PHY_MEM_VAL_2_v0 Block_3_f3_lex0_PHY_MEM_VAL_3_v0) (= (+ Block_3_f3_lex0_%BP_v0 #f1) Block_3_f3_lex0_PHY_MEM_ADDR_1_v0) (= Block_3_f3_lex0_%6_out_v0 '0) (= Block_3_f3_lex0_%SP_v0 Block_3_f3_lex0_PHY_MEM_ADDR_3_v0) (= Block_3_f3_lex0_%BP_out_v0 Block_3_f3_lex0_PHY_MEM_VAL_8_v0)))
)
)


--
Name: Block_0
VariableMetadata:
Block_0_f0_lex0_%4_out_v0: vis: PROVER, round: 0, random: false, committed: false
Block_0_f0_lex0_%4_v0: vis: PUBLIC, round: 0, random: false, committed: false
Block_0_f0_lex0_%BP_out_v0: vis: PROVER, round: 0, random: false, committed: false
Block_0_f0_lex0_%C0_v0: vis: PUBLIC, round: 0, random: false, committed: false
Block_0_f0_lex0_%C1_v0: vis: PUBLIC, round: 0, random: false, committed: false
Block_0_f0_lex0_%FGP_out_v0: vis: PROVER, round: 0, random: false, committed: false
Block_0_f0_lex0_%FGP_v0: vis: PROVER, round: 0, random: false, committed: false
Block_0_f0_lex0_%SP_out_v0: vis: PROVER, round: 0, random: false, committed: false
return: vis: PUBLIC, round: 0, random: false, committed: false
Output:
  (declare
 (
 )
((challenge Block_0_f0_lex0_%C0_v0 52435875175126190479447740508185965837690552500527637822603658699938581184513)))

  (declare
 (
 )
((challenge Block_0_f0_lex0_%C1_v0 52435875175126190479447740508185965837690552500527637822603658699938581184513)))

  (set_default_modulus 52435875175126190479447740508185965837690552500527637822603658699938581184513
(declare
 (
  (Block_0_f0_lex0_%SP_out_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_0_f0_lex0_%BP_out_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (return (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_0_f0_lex0_%4_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_0_f0_lex0_%4_out_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_0_f0_lex0_%FGP_out_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_0_f0_lex0_%FGP_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
 )
(and (= Block_0_f0_lex0_%FGP_v0 Block_0_f0_lex0_%FGP_out_v0) (= Block_0_f0_lex0_%4_out_v0 Block_0_f0_lex0_%4_v0) (= #f1 return) (= Block_0_f0_lex0_%BP_out_v0 #f0) (= Block_0_f0_lex0_%SP_out_v0 #f0)))
)


--
Name: Block_2
VariableMetadata:
Block_2_f2_lex0_%4_v0: vis: PROVER, round: 0, random: false, committed: false
Block_2_f2_lex0_%5_out_v0: vis: PROVER, round: 0, random: false, committed: false
Block_2_f2_lex0_%5_v0: vis: PROVER, round: 0, random: false, committed: false
Block_2_f2_lex0_%6_v0: vis: PROVER, round: 0, random: false, committed: false
Block_2_f2_lex0_%7_out_v0: vis: PROVER, round: 0, random: false, committed: false
Block_2_f2_lex0_%BP_out_v0: vis: PROVER, round: 0, random: false, committed: false
Block_2_f2_lex0_%BP_v0: vis: PROVER, round: 0, random: false, committed: false
Block_2_f2_lex0_%C0_v0: vis: PUBLIC, round: 0, random: false, committed: false
Block_2_f2_lex0_%C1_v0: vis: PUBLIC, round: 0, random: false, committed: false
Block_2_f2_lex0_%FGP_out_v0: vis: PROVER, round: 0, random: false, committed: false
Block_2_f2_lex0_%FGP_v0: vis: PROVER, round: 0, random: false, committed: false
Block_2_f2_lex0_%RP_out_v0: vis: PROVER, round: 0, random: false, committed: false
Block_2_f2_lex0_%SP_out_v0: vis: PROVER, round: 0, random: false, committed: false
Block_2_f2_lex0_%SP_v0: vis: PROVER, round: 0, random: false, committed: false
Block_2_f2_lex0_PHY_MEM_ADDR_0_v0: vis: PROVER, round: 0, random: false, committed: false
Block_2_f2_lex0_PHY_MEM_ADDR_1_v0: vis: PROVER, round: 0, random: false, committed: false
Block_2_f2_lex0_PHY_MEM_ADDR_2_v0: vis: PROVER, round: 0, random: false, committed: false
Block_2_f2_lex0_PHY_MEM_ADDR_3_v0: vis: PROVER, round: 0, random: false, committed: false
Block_2_f2_lex0_PHY_MEM_ADDR_4_v0: vis: PROVER, round: 0, random: false, committed: false
Block_2_f2_lex0_PHY_MEM_VAL_0_v0: vis: PROVER, round: 0, random: false, committed: false
Block_2_f2_lex0_PHY_MEM_VAL_1_v0: vis: PROVER, round: 0, random: false, committed: false
Block_2_f2_lex0_PHY_MEM_VAL_2_v0: vis: PROVER, round: 0, random: false, committed: false
Block_2_f2_lex0_PHY_MEM_VAL_3_v0: vis: PROVER, round: 0, random: false, committed: false
Block_2_f2_lex0_PHY_MEM_VAL_4_v0: vis: PROVER, round: 0, random: false, committed: false
return: vis: PUBLIC, round: 0, random: false, committed: false
Output:
  (declare
 (
 )
((challenge Block_2_f2_lex0_%C0_v0 52435875175126190479447740508185965837690552500527637822603658699938581184513)))

  (declare
 (
 )
((challenge Block_2_f2_lex0_%C1_v0 52435875175126190479447740508185965837690552500527637822603658699938581184513)))

  (set_default_modulus 52435875175126190479447740508185965837690552500527637822603658699938581184513
(declare
 (
  (Block_2_f2_lex0_%SP_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_2_f2_lex0_%SP_out_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_2_f2_lex0_%FGP_out_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_2_f2_lex0_%C1_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_2_f2_lex0_PHY_MEM_ADDR_4_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_2_f2_lex0_PHY_MEM_VAL_4_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_2_f2_lex0_%C0_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_2_f2_lex0_PHY_MEM_ADDR_3_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_2_f2_lex0_PHY_MEM_VAL_3_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_2_f2_lex0_PHY_MEM_ADDR_2_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_2_f2_lex0_PHY_MEM_VAL_2_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_2_f2_lex0_PHY_MEM_ADDR_1_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_2_f2_lex0_PHY_MEM_VAL_1_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_2_f2_lex0_PHY_MEM_ADDR_0_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_2_f2_lex0_PHY_MEM_VAL_0_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_2_f2_lex0_%FGP_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_2_f2_lex0_%BP_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (return (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_2_f2_lex0_%4_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_2_f2_lex0_%BP_out_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_2_f2_lex0_%6_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_2_f2_lex0_%5_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_2_f2_lex0_%7_out_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_2_f2_lex0_%RP_out_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_2_f2_lex0_%5_out_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
 )
 (let
  (
   ('0 (+ Block_2_f2_lex0_%SP_v0 #f2))
  )
  
(and (= Block_2_f2_lex0_%5_out_v0 #f20) (= Block_2_f2_lex0_%SP_v0 Block_2_f2_lex0_PHY_MEM_ADDR_0_v0) (= Block_2_f2_lex0_%RP_out_v0 #f3) (= (+ '0 #f1) Block_2_f2_lex0_PHY_MEM_ADDR_3_v0) (= (+ '0 #f2) Block_2_f2_lex0_PHY_MEM_ADDR_4_v0) (= Block_2_f2_lex0_%7_out_v0 Block_2_f2_lex0_%5_v0) (= (+ Block_2_f2_lex0_%SP_v0 #f1) Block_2_f2_lex0_PHY_MEM_ADDR_1_v0) (= Block_2_f2_lex0_%SP_v0 Block_2_f2_lex0_PHY_MEM_VAL_2_v0) (= Block_2_f2_lex0_%5_v0 Block_2_f2_lex0_PHY_MEM_VAL_3_v0) (= Block_2_f2_lex0_%6_v0 Block_2_f2_lex0_PHY_MEM_VAL_4_v0) (= '0 Block_2_f2_lex0_PHY_MEM_ADDR_2_v0) (= Block_2_f2_lex0_%BP_out_v0 '0) (= Block_2_f2_lex0_%4_v0 Block_2_f2_lex0_PHY_MEM_VAL_1_v0) (= #f5 return) (= Block_2_f2_lex0_%BP_v0 Block_2_f2_lex0_PHY_MEM_VAL_0_v0) (= (* (* (* (* (* Block_2_f2_lex0_%FGP_v0 (+ (- (+ (- (* Block_2_f2_lex0_%C0_v0 Block_2_f2_lex0_PHY_MEM_VAL_0_v0)) Block_2_f2_lex0_PHY_MEM_ADDR_0_v0)) Block_2_f2_lex0_%C1_v0)) (+ (- (+ (- (* Block_2_f2_lex0_%C0_v0 Block_2_f2_lex0_PHY_MEM_VAL_1_v0)) Block_2_f2_lex0_PHY_MEM_ADDR_1_v0)) Block_2_f2_lex0_%C1_v0)) (+ (- (+ (- (* Block_2_f2_lex0_%C0_v0 Block_2_f2_lex0_PHY_MEM_VAL_2_v0)) Block_2_f2_lex0_PHY_MEM_ADDR_2_v0)) Block_2_f2_lex0_%C1_v0)) (+ (- (+ (- (* Block_2_f2_lex0_%C0_v0 Block_2_f2_lex0_PHY_MEM_VAL_3_v0)) Block_2_f2_lex0_PHY_MEM_ADDR_3_v0)) Block_2_f2_lex0_%C1_v0)) (+ (- (+ (- (* Block_2_f2_lex0_%C0_v0 Block_2_f2_lex0_PHY_MEM_VAL_4_v0)) Block_2_f2_lex0_PHY_MEM_ADDR_4_v0)) Block_2_f2_lex0_%C1_v0)) Block_2_f2_lex0_%FGP_out_v0) (= Block_2_f2_lex0_%SP_out_v0 (+ '0 #f3))))
)
)


--
Name: Block_4
VariableMetadata:
%4_v0: vis: PROVER, round: 0, random: false, committed: false
%5_v0: vis: PROVER, round: 0, random: false, committed: false
%C0_v0: vis: PUBLIC, round: 0, random: false, committed: false
%C1_v0: vis: PUBLIC, round: 0, random: false, committed: false
%FGP_out_v0: vis: PROVER, round: 0, random: false, committed: false
%FGP_v0: vis: PROVER, round: 0, random: false, committed: false
return: vis: PUBLIC, round: 0, random: false, committed: false
Output:
  (declare
 (
 )
((challenge %C0_v0)))

  (declare
 (
 )
((challenge %C1_v0)))

  (set_default_modulus 52435875175126190479447740508185965837690552500527637822603658699938581184513
(declare
 (
  (return (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_4_f4_lex0_%FGP_out_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_4_f4_lex0_%FGP_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
 )
(and (= Block_4_f4_lex0_%FGP_v0 Block_4_f4_lex0_%FGP_out_v0) (= #f0 return)))
)


--
Name: Block_5
VariableMetadata:
%5_v0: vis: PROVER, round: 0, random: false, committed: false
%7_v0: vis: PROVER, round: 0, random: false, committed: false
%BP_out_v0: vis: PROVER, round: 0, random: false, committed: false
%BP_v0: vis: PROVER, round: 0, random: false, committed: false
%C0_v0: vis: PUBLIC, round: 0, random: false, committed: false
%C1_v0: vis: PUBLIC, round: 0, random: false, committed: false
%FGP_out_v0: vis: PROVER, round: 0, random: false, committed: false
%FGP_v0: vis: PROVER, round: 0, random: false, committed: false
Block_5_f5_lex0_%RET_out_v0: vis: PROVER, round: 0, random: false, committed: false
Block_5_f5_lex0_%RP_out_v0: vis: PROVER, round: 0, random: false, committed: false
Block_5_f5_lex0_%RP_v0: vis: PROVER, round: 0, random: false, committed: false
Block_5_f5_lex0_%SP_out_v0: vis: PROVER, round: 0, random: false, committed: false
Block_5_f5_lex0_%SP_v0: vis: PROVER, round: 0, random: false, committed: false
return: vis: PUBLIC, round: 0, random: false, committed: false
Output:
  (declare
 (
 )
((challenge Block_5_f5_lex0_%C0_v0 52435875175126190479447740508185965837690552500527637822603658699938581184513)))

  (declare
 (
 )
((challenge Block_5_f5_lex0_%C1_v0 52435875175126190479447740508185965837690552500527637822603658699938581184513)))

  (declare
 (
  (Block_5_f5_lex0_%BP_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_5_f5_lex0_%BP_out_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_5_f5_lex0_%RP_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_5_f5_lex0_%RP_out_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (return (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_5_f5_lex0_%5_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_5_f5_lex0_%7_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_5_f5_lex0_%RET_out_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_5_f5_lex0_%FGP_out_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_5_f5_lex0_%FGP_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_5_f5_lex0_%SP_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_5_f5_lex0_%SP_out_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
 )
(and (= Block_5_f5_lex0_%SP_out_v0 Block_5_f5_lex0_%SP_v0) (= Block_5_f5_lex0_%FGP_v0 Block_5_f5_lex0_%FGP_out_v0) (= Block_5_f5_lex0_%RET_out_v0 (+ Block_5_f5_lex0_%7_v0 Block_5_f5_lex0_%5_v0)) (= Block_5_f5_lex0_%RP_v0 return) (= Block_5_f5_lex0_%RP_out_v0 Block_5_f5_lex0_%RP_v0) (= Block_5_f5_lex0_%BP_out_v0 Block_5_f5_lex0_%BP_v0)))


--
Name: Block_1
VariableMetadata:
Block_1_f1_lex0_%4_out_v0: vis: PROVER, round: 0, random: false, committed: false
Block_1_f1_lex0_%4_v0: vis: PROVER, round: 0, random: false, committed: false
Block_1_f1_lex0_%5_out_v0: vis: PROVER, round: 0, random: false, committed: false
Block_1_f1_lex0_%6_out_v0: vis: PROVER, round: 0, random: false, committed: false
Block_1_f1_lex0_%BP_out_v0: vis: PROVER, round: 0, random: false, committed: false
Block_1_f1_lex0_%BP_v0: vis: PROVER, round: 0, random: false, committed: false
Block_1_f1_lex0_%C0_v0: vis: PUBLIC, round: 0, random: false, committed: false
Block_1_f1_lex0_%C1_v0: vis: PUBLIC, round: 0, random: false, committed: false
Block_1_f1_lex0_%FGP_out_v0: vis: PROVER, round: 0, random: false, committed: false
Block_1_f1_lex0_%FGP_v0: vis: PROVER, round: 0, random: false, committed: false
Block_1_f1_lex0_%SP_out_v0: vis: PROVER, round: 0, random: false, committed: false
Block_1_f1_lex0_%SP_v0: vis: PROVER, round: 0, random: false, committed: false
return: vis: PUBLIC, round: 0, random: false, committed: false
Output:
  (declare
 (
 )
((challenge Block_1_f1_lex0_%C0_v0 52435875175126190479447740508185965837690552500527637822603658699938581184513)))

  (declare
 (
 )
((challenge Block_1_f1_lex0_%C1_v0 52435875175126190479447740508185965837690552500527637822603658699938581184513)))

  (set_default_modulus 52435875175126190479447740508185965837690552500527637822603658699938581184513
(declare
 (
  (Block_1_f1_lex0_%4_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_1_f1_lex0_%SP_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_1_f1_lex0_%SP_out_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_1_f1_lex0_%BP_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_1_f1_lex0_%BP_out_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (return (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_1_f1_lex0_%4_out_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_1_f1_lex0_%FGP_out_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_1_f1_lex0_%FGP_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_1_f1_lex0_%5_out_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
  (Block_1_f1_lex0_%6_out_v0 (mod 52435875175126190479447740508185965837690552500527637822603658699938581184513))
 )
(and (= Block_1_f1_lex0_%6_out_v0 #f0) (= Block_1_f1_lex0_%5_out_v0 #f6) (= Block_1_f1_lex0_%FGP_v0 Block_1_f1_lex0_%FGP_out_v0) (= Block_1_f1_lex0_%4_out_v0 Block_1_f1_lex0_%4_v0) (= #f2 return) (= Block_1_f1_lex0_%BP_out_v0 Block_1_f1_lex0_%BP_v0) (= Block_1_f1_lex0_%SP_out_v0 Block_1_f1_lex0_%SP_v0) (= Block_1_f1_lex0_%4_v0 #f5)))
)

